# -- Container image settings for the network bootstrapper workload. See https://kubernetes.io/docs/concepts/containers/images/ for background.
image:
  # -- (string) OCI repository hosting the network bootstrapper image.
  repository: ghcr.io/settlemint/network-bootstrapper
  # -- (string) Image pull policy controlling when Kubernetes re-fetches the image layer manifest.
  pullPolicy: IfNotPresent
  # -- (string) Image tag override. Defaults to the chart's `.appVersion` when left empty.
  tag: ""

# -- (list) Image pull secrets enabling access to private registries. See https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/ for usage.
imagePullSecrets: []
# -- (string) Short name override applied to chart-scoped resource names.
nameOverride: ""
# -- (string) Fully qualified name override for resources created by this release.
fullnameOverride: ""

# -- (object) Service account configuration for the bootstrapper pod. See https://kubernetes.io/docs/concepts/security/service-accounts/ for details.
serviceAccount:
  # -- (bool) Whether to create a service account automatically.
  create: true
  # -- (bool) Automatically mount the service account token into the pod.
  automount: true
  # -- (object) Additional metadata annotations applied to the service account object.
  annotations: {}
  # -- (string) Existing service account name to use instead of one generated by the chart.
  # If unset and `serviceAccount.create` is true, a name is derived from the chart fullname.
  name: ""

# -- (object) RBAC resources granting ConfigMap access for Kubernetes output workflows.
rbac:
  # -- (bool) Whether to create Role and RoleBinding objects targeting the service account.
  create: true

# -- (object) Pod-level annotations merged onto the generated pod template metadata. See https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/.
podAnnotations: {}
# -- (object) Pod-level labels applied to the pod template metadata. See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/.
podLabels: {}

# -- (object) Pod-level security context applied to all containers in the pod.
podSecurityContext:
  {}
  # fsGroup: 2000

# -- (object) Container security context applied to the bootstrapper container.
securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- (object) Resource requests and limits for the bootstrapper container.
resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- (list) Additional volumes injected into the deployment pod spec.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- (list) Additional volume mounts added to the bootstrapper container.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# -- (object) Node selector constraints for scheduling the bootstrapper pod.
nodeSelector: {}

# -- (list) Kubernetes tolerations assigned to the bootstrapper pod.
tolerations: []

# -- (object) Affinity and anti-affinity rules influencing pod placement.
affinity: {}

# -- (string) Kubernetes cluster DNS suffix. Used when staticNodeDomain is not explicitly provided.
clusterDomain: svc.cluster.local

# -- (int) Default P2P port for generated static node URIs when per-run settings are omitted.
defaultStaticNodePort: 30303

# -- (int) Default discovery port for generated static node URIs when per-run settings are omitted.
defaultStaticNodeDiscoveryPort: 30303

# -- (object) Network bootstrapper CLI settings translated into command-line flags.
settings:
  # -- (int) Number of validator node definitions the bootstrapper generates. Default: 4.
  validators:
  # -- (string) DNS suffix appended to static node hostnames (for example: "svc.cluster.local"). Default: `clusterDomain`.
  staticNodeDomain:
  # -- (string) Namespace segment inserted between service and domain in static node hostnames. Default: release namespace.
  staticNodeNamespace:
  # -- (int) P2P port used in static node enode URIs. Default: `defaultStaticNodePort`.
  staticNodePort:
  # -- (int) Discovery port used in static node enode URIs. Default: `defaultStaticNodeDiscoveryPort`.
  staticNodeDiscoveryPort:
  # -- (string) Filesystem path, accessible to the job, pointing to a JSON file with initial account allocations. Omit to skip pre-funded accounts.
  allocations:
  # -- (string) Destination for generated artefacts: `screen` (stdout), `file` (write to volume), or `kubernetes` (persist as Kubernetes secrets/configmaps). Default: "screen".
  outputType: kubernetes
  # -- (string) Consensus engine to configure for the network (IBFTv2 or QBFT). Default: "QBFT".
  consensus:
  # -- (int) Explicit chain ID applied to the genesis configuration. Defaults to a random value in the 40000-50000 range when omitted.
  chainId:
  # -- (int) Target block time in seconds encoded into genesis. Default: 2.
  secondsPerBlock:
  # -- (int) Genesis block gas limit value expressed in decimal. Default: 9007199254740991.
  gasLimit:
  # -- (int) Base gas price in wei applied to the chain. Default: 0.
  gasPrice:
  # -- (int) Maximum EVM stack size allowed for contract execution. Default: 2048.
  evmStackSize:
  # -- (int) Contract size limit in bytes enforced by the EVM. Default: 2147483647.
  contractSizeLimit:
