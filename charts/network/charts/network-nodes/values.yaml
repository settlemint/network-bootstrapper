# Default values for nodes.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This sets the replica count for the StatefulSet more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/
rpcReplicaCount: 2
# RPC pods expect Secrets named `besu-node-rpc-node-<n>-private-key` (1-indexed) to exist for private key mounts.
# Validator pods expect Secrets named `besu-node-validator-<n>-private-key` (1-indexed).
validatorReplicaCount: 4

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: docker.io/hyperledger/besu
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  tag: "25.8.0"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  p2pType: NodePort
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  ports:
    rpc: 8545
    ws: 8546
    graphql: 8547
    rlpx: 30303
    discovery: 30303
    metrics: 9545

config:
  logging: INFO
  dataStorageFormat: FOREST
  dataPath: /var/lib/besu
  bonsaiLimitTrieLogsEnabled: false
  cacheLastBlocks: 1024
  minGasPrice: 0
  txPool:
    type: SEQUENCED
    maxSize: 100000
    noLocalPriority: true
    limitByAccountPercentage: 1
    enableSaveRestore: true
  p2p:
    enabled: true
    discoveryEnabled: true
    staticNodesFile: "/etc/besu/static-nodes.json"
    interface: "0.0.0.0"
    maxPeers: 25
  rpc:
    txFeecap: 0
  sync:
    minPeers: 1
    mode: FULL
  remoteConnectionsLimitEnabled: false
  randomPeerPriorityEnabled: true
  receiptCompactionEnabled: true
  hostAllowlist:
    - "*"
  http:
    enabled: true
    host: "0.0.0.0"
    api:
      - DEBUG
      - ETH
      - ADMIN
      - WEB3
      - IBFT
      - NET
      - TRACE
      - QBFT
      - PERM
      - TXPOOL
      - PLUGINS
    corsOrigins:
      - all
    authenticationEnabled: false
    maxActiveConnections: 2000
    maxRequestContentLength: 524288000
    maxBatchSize: 512
  ws:
    enabled: true
    host: "0.0.0.0"
    api:
      - DEBUG
      - ETH
      - ADMIN
      - WEB3
      - IBFT
      - NET
      - TRACE
      - QBFT
      - PERM
      - TXPOOL
      - PLUGINS
    authenticationEnabled: false
    maxActiveConnections: 2000
    maxFrameSize: 2097152
  graphql:
    enabled: true
    host: "0.0.0.0"
    corsOrigins:
      - all
  metrics:
    enabled: true
    host: "0.0.0.0"
    categories:
      - BLOCKCHAIN
      - ETHEREUM
      - EXECUTORS
      - JVM
      - NETWORK
      - PEERS
      - PROCESS
      - PRUNER
      - RPC
      - SYNCHRONIZER
      - TRANSACTION_POOL
  revertReasonEnabled: true

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Expose the service via gateway-api HTTPRoute
# Requires Gateway API resources and suitable controller installed within the cluster
# (see: https://gateway-api.sigs.k8s.io/guides/)
httpRoute:
  # HTTPRoute enabled.
  enabled: false
  # HTTPRoute annotations.
  annotations: {}
  # Which Gateways this Route is attached to.
  parentRefs:
    - name: gateway
      sectionName: http
      # namespace: default
  # Hostnames matching HTTP header.
  hostnames:
    - chart-example.local
  # List of rules and filters applied.
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /headers
  #   filters:
  #   - type: RequestHeaderModifier
  #     requestHeaderModifier:
  #       set:
  #       - name: My-Overwrite-Header
  #         value: this-is-the-only-value
  #       remove:
  #       - User-Agent
  # - matches:
  #   - path:
  #       type: PathPrefix
  #       value: /echo
  #     headers:
  #     - name: version
  #       value: v2

# -- Expose the service via OpenShift Route when running on OpenShift clusters
#     This relies on the OpenShift router to make the network nodes reachable externally.
openShiftRoute:
  enabled: false
  # Route annotations transmitted to the OpenShift router.
  annotations: {}
  # Custom host name for the route. Leave empty to let the cluster allocate one.
  host: ""
  # Optional path to scope traffic.
  path: ""
  # Wildcard behaviour; defaults to "None" when left empty.
  wildcardPolicy: ""
  port:
    # Target service port exposed through the route.
    targetPort: http
  to:
    # Adjust when balancing against multiple services; default weight 100 is omitted from the manifest.
    weight: 100
  # Extra service backends following the RouteTargetReference schema.
  alternateBackends: []
  # TLS termination settings; set to null to disable, or provide termination, certificates, etc.
  tls: null

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# Persistent storage configuration for the StatefulSet more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/
persistence:
  enabled: false
  # When enabled without an existingClaim, a PersistentVolumeClaim is created per replica.
  mountPath: /var/lib/besu
  volumeName: data
  accessModes:
    - ReadWriteOnce
  # size is required when persistence.enabled is true and existingClaim is not set. Increase storage by resizing the bound PVC or switching to an existingClaim.
  size: 20Gi
  storageClass: ""
  volumeMode: ""
  # Set existingClaim to reuse a pre-provisioned PVC that you manage (supports manual resizing).
  existingClaim: ""
  # Optional PVC metadata.
  annotations: {}
  selector: {}
  retention:
    whenDeleted: Retain
    whenScaled: Delete
  # Optional mount fine-tuning.
  subPath: ""
  readOnly: false


# Additional volumes on the output StatefulSet definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output StatefulSet definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
